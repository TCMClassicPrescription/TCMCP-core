name: Windows Build

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      # 检出 vcpkg 子模块（如果您的项目中使用了 vcpkg 作为子模块）
      - name: Checkout vcpkg
        run: |
          git submodule update --init --recursive

      # 安装 vcpkg 并使用项目的 vcpkg.json 安装依赖
      - name: Install dependencies with vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg install

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake with MinGW
        run: |
          cmake -B ${{ github.workspace }}/build `
          -G "MinGW Makefiles" `
          -DCMAKE_BUILD_TYPE=Release `
          -S ${{ github.workspace }} `
          -DCMAKE_PREFIX_PATH="${{ github.workspace }}/vcpkg/installed/x64-windows/share"
      - name: Build with MinGW
        run: |
          cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release

      - name: Upload libtcmcp_core.dll
        uses: actions/upload-artifact@v2
        with:
          name: libtcmcp_core.dll
          path: ${{ github.workspace }}/build/libtcmcp_core.dll